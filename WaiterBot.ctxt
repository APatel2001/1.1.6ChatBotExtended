#BlueJ class context
comment0.target=WaiterBot
comment0.text=\r\n\ A\ program\ to\ carry\ on\ conversations\ with\ a\ human\ user.\r\n\ This\ version\:\r\n<ul><li>\r\n\ \ \ \ \ \ Uses\ advanced\ search\ for\ keywords\ \r\n</li><li>\r\n\ \ \ \ \ \ Will\ transform\ statements\ as\ well\ as\ react\ to\ keywords\r\n</li></ul>\r\n\ @author\ Laurie\ White\r\n\ @version\ April\ 2012\r\n\r\n
comment1.params=
comment1.target=java.lang.String\ getGreeting()
comment1.text=\r\n\ Get\ a\ default\ greeting\ \ \ \r\n\ @return\ a\ greeting\r\n
comment10.params=statement\ goal
comment10.target=int\ findKeyword(java.lang.String,\ java.lang.String)
comment10.text=\r\n\ Search\ for\ one\ word\ in\ phrase.\ \ The\ search\ is\ not\ case\ sensitive.\r\n\ This\ method\ will\ check\ that\ the\ given\ goal\ is\ not\ a\ substring\ of\ a\ longer\ string\r\n\ (so,\ for\ example,\ "I\ know"\ does\ not\ contain\ "no").\ \ The\ search\ begins\ at\ the\ beginning\ of\ the\ string.\ \ \r\n\ @param\ statement\ the\ string\ to\ search\r\n\ @param\ goal\ the\ string\ to\ search\ for\r\n\ @return\ the\ index\ of\ the\ first\ occurrence\ of\ goal\ in\ statement\ or\ -1\ if\ it's\ not\ found\r\n
comment11.params=
comment11.target=java.lang.String\ getRandomResponse()
comment11.text=\r\n\ Pick\ a\ default\ response\ to\ use\ if\ nothing\ else\ fits.\r\n\ @return\ a\ non-committal\ string\r\n
comment12.params=
comment12.target=java.lang.String\ getJoke()
comment13.params=
comment13.target=java.lang.String\ religion()
comment13.text=\r\n\ gets\ response\ if\ user\ asks\ about\ religion\r\n\ returns\ input\ based\ on\ input\ frequency,\ utilizes\ religionflag\ variable\r\n\ as\ counter\r\n
comment14.params=
comment14.target=java.lang.String\ politic()
comment14.text=\r\n\ gets\ response\ if\ user\ asks\ about\ politics\r\n\ @returns\ reponseb\ ased\ on\ frequency\ of\ input,\ uses\ politicsflag\ as\ counter\r\n
comment15.params=statement
comment15.target=java.lang.String\ allergies(java.lang.String)
comment15.text=\r\n\ Provides\ allergy\ information\r\n\ @param\ statement\r\n\ @return\ response\r\n
comment16.params=statement
comment16.target=java.lang.String\ menuDescription(java.lang.String)
comment16.text=\r\n\ Gives\ description\ of\ menu\ items\r\n\ @param\ statement\r\n\ @return\ response\ \r\n
comment17.params=statement
comment17.target=java.lang.String\ getPrice(java.lang.String)
comment17.text=\r\n\ Provides\ price\ to\ user\r\n\ @param\ statement\r\n\ @return\ response\r\n
comment18.params=
comment18.target=java.lang.String\ music()
comment18.text=\r\n\ getter\ method\ for\ bot's\ music\ reference\r\n\ @returns\ string\ to\ respond\ to\ user\ input\r\n
comment19.params=
comment19.target=java.lang.String\ uncomfortable()
comment2.params=
comment2.target=java.lang.String\ getName()
comment2.text=\r\n\ gets\ bot's\ name\r\n\ @return\ name\r\n
comment20.params=statement
comment20.target=java.lang.String\ getBuy(java.lang.String)
comment21.params=
comment21.target=java.lang.String\ getRecipt()
comment3.params=
comment3.target=java.lang.String\ getCreator()
comment3.text=\r\n\ gets\ bot's\ creator\ names\r\n\ @return\ creator\ names\r\n
comment4.params=
comment4.target=java.lang.String\ getAge()
comment4.text=\r\n\ gets\ bot's\ age\r\n\ @returns\ bot's\ age\r\n
comment5.params=statement
comment5.target=java.lang.String\ getResponse(java.lang.String)
comment5.text=\r\n\ Gives\ a\ response\ to\ a\ user\ statement\r\n\ \r\n\ @param\ statement\r\n\ \ \ \ \ \ \ \ \ \ \ \ the\ user\ statement\r\n\ @return\ a\ response\ based\ on\ the\ rules\ given\r\n
comment6.params=statement
comment6.target=java.lang.String\ transformIWantStatement(java.lang.String)
comment6.text=\r\n\ Take\ a\ statement\ with\ "I\ want\ to\ <something>."\ and\ transform\ it\ into\ \r\n\ "What\ would\ it\ mean\ to\ <something>?"\r\n\ @param\ statement\ the\ user\ statement,\ assumed\ to\ contain\ "I\ want\ to"\r\n\ @return\ the\ transformed\ statement\r\n
comment7.params=statement
comment7.target=java.lang.String\ transformYouMeStatement(java.lang.String)
comment7.text=\r\n\ Take\ a\ statement\ with\ "you\ <something>\ me"\ and\ transform\ it\ into\ \r\n\ "What\ makes\ you\ think\ that\ I\ <something>\ you?"\r\n\ @param\ statement\ the\ user\ statement,\ assumed\ to\ contain\ "you"\ followed\ by\ "me"\r\n\ @return\ the\ transformed\ statement\r\n\ If\ user\ responds\ with\ past\ tense\ keyword\ "are",\ code\ removes\ the\ keyword\ and\ returns\r\n\ a\ substring\ of\ the\ statement\ that\ makes\ sense\ grammatically\r\n
comment8.params=statement
comment8.target=java.lang.String\ transformWhyStatement(java.lang.String)
comment8.text=\r\n\ Method\ designed\ towards\ creating\ a\ specific\ repsonse\ aimed\ towards\ user\r\n\ statements\ that\ include\ initial\ keyword\ of\ "I"\ and\ keyword\ "you"\r\n
comment9.params=statement\ goal\ startPos
comment9.target=int\ findKeyword(java.lang.String,\ java.lang.String,\ int)
comment9.text=\r\n\ Search\ for\ one\ word\ in\ phrase.\ \ The\ search\ is\ not\ case\ sensitive.\r\n\ This\ method\ will\ check\ that\ the\ given\ goal\ is\ not\ a\ substring\ of\ a\ longer\ string\r\n\ (so,\ for\ example,\ "I\ know"\ does\ not\ contain\ "no").\ \ \r\n\ @param\ statement\ the\ string\ to\ search\r\n\ @param\ goal\ the\ string\ to\ search\ for\r\n\ @param\ startPos\ the\ character\ of\ the\ string\ to\ begin\ the\ search\ at\r\n\ @return\ the\ index\ of\ the\ first\ occurrence\ of\ goal\ in\ statement\ or\ -1\ if\ it's\ not\ found\r\n
numComments=22
